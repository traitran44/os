What happened? Which file creation modifications were written to disk and which were not?
    There's an error "iloc: no type" because the inode'type is zero
    the inode corresponding to block 0 still has type == 0 even block 0 contains data

    the write_log() write data from the disk block to the log block
    The log's file block is being written to disk, but because the log.lh.block[0]=0 the disk block that was intended to be written to is not written to and being redirected to block 0 on disk.
    the install_trans() write the log block data to block 0 on disk anyway even the mapping is changed

    when "echo hi > a" is called it tries to write to file and then commit the changes but pid > 1 therefore it panics



This time there is no crash. Why?
    The reason there's no crash is because recover_from_log() called install_trans() which writes the log's block data to block 0

Why was the file empty if you created it with echo hi > a?
    because the file "a" is mapped to a different disk block than the block 0 on disk. So when the xv6 try to recover_from_log up on booting up, it writes the data the block 0 instead of the right block for file "a"

Why would it be a mistake for the buffer cache to evict block 33 from the buffer cache before the commit?
    1. All changes would be lost if write_log() in commit is not completed
    2. cache block 33 helps reduce runtime preventing reread the whole block again